/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.irisdemo.banksim.avroevent;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class DemographicsEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6461815941885312384L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DemographicsEvent\",\"namespace\":\"com.irisdemo.banksim.avroevent\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"eventDate\",\"type\":\"string\",\"logicalType\":\"timestamp-millis\"},{\"name\":\"account\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"state\",\"type\":\"string\"},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"phone\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<DemographicsEvent> ENCODER =
      new BinaryMessageEncoder<DemographicsEvent>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<DemographicsEvent> DECODER =
      new BinaryMessageDecoder<DemographicsEvent>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<DemographicsEvent> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<DemographicsEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<DemographicsEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<DemographicsEvent>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this DemographicsEvent to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a DemographicsEvent from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a DemographicsEvent instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static DemographicsEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public long id;
  @Deprecated public java.lang.CharSequence eventDate;
  @Deprecated public java.lang.CharSequence account;
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public java.lang.CharSequence state;
  @Deprecated public java.lang.CharSequence city;
  @Deprecated public java.lang.CharSequence phone;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public DemographicsEvent() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param eventDate The new value for eventDate
   * @param account The new value for account
   * @param name The new value for name
   * @param state The new value for state
   * @param city The new value for city
   * @param phone The new value for phone
   */
  public DemographicsEvent(java.lang.Long id, java.lang.CharSequence eventDate, java.lang.CharSequence account, java.lang.CharSequence name, java.lang.CharSequence state, java.lang.CharSequence city, java.lang.CharSequence phone) {
    this.id = id;
    this.eventDate = eventDate;
    this.account = account;
    this.name = name;
    this.state = state;
    this.city = city;
    this.phone = phone;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return eventDate;
    case 2: return account;
    case 3: return name;
    case 4: return state;
    case 5: return city;
    case 6: return phone;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: eventDate = (java.lang.CharSequence)value$; break;
    case 2: account = (java.lang.CharSequence)value$; break;
    case 3: name = (java.lang.CharSequence)value$; break;
    case 4: state = (java.lang.CharSequence)value$; break;
    case 5: city = (java.lang.CharSequence)value$; break;
    case 6: phone = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'eventDate' field.
   * @return The value of the 'eventDate' field.
   */
  public java.lang.CharSequence getEventDate() {
    return eventDate;
  }


  /**
   * Sets the value of the 'eventDate' field.
   * @param value the value to set.
   */
  public void setEventDate(java.lang.CharSequence value) {
    this.eventDate = value;
  }

  /**
   * Gets the value of the 'account' field.
   * @return The value of the 'account' field.
   */
  public java.lang.CharSequence getAccount() {
    return account;
  }


  /**
   * Sets the value of the 'account' field.
   * @param value the value to set.
   */
  public void setAccount(java.lang.CharSequence value) {
    this.account = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'state' field.
   * @return The value of the 'state' field.
   */
  public java.lang.CharSequence getState() {
    return state;
  }


  /**
   * Sets the value of the 'state' field.
   * @param value the value to set.
   */
  public void setState(java.lang.CharSequence value) {
    this.state = value;
  }

  /**
   * Gets the value of the 'city' field.
   * @return The value of the 'city' field.
   */
  public java.lang.CharSequence getCity() {
    return city;
  }


  /**
   * Sets the value of the 'city' field.
   * @param value the value to set.
   */
  public void setCity(java.lang.CharSequence value) {
    this.city = value;
  }

  /**
   * Gets the value of the 'phone' field.
   * @return The value of the 'phone' field.
   */
  public java.lang.CharSequence getPhone() {
    return phone;
  }


  /**
   * Sets the value of the 'phone' field.
   * @param value the value to set.
   */
  public void setPhone(java.lang.CharSequence value) {
    this.phone = value;
  }

  /**
   * Creates a new DemographicsEvent RecordBuilder.
   * @return A new DemographicsEvent RecordBuilder
   */
  public static com.irisdemo.banksim.avroevent.DemographicsEvent.Builder newBuilder() {
    return new com.irisdemo.banksim.avroevent.DemographicsEvent.Builder();
  }

  /**
   * Creates a new DemographicsEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new DemographicsEvent RecordBuilder
   */
  public static com.irisdemo.banksim.avroevent.DemographicsEvent.Builder newBuilder(com.irisdemo.banksim.avroevent.DemographicsEvent.Builder other) {
    if (other == null) {
      return new com.irisdemo.banksim.avroevent.DemographicsEvent.Builder();
    } else {
      return new com.irisdemo.banksim.avroevent.DemographicsEvent.Builder(other);
    }
  }

  /**
   * Creates a new DemographicsEvent RecordBuilder by copying an existing DemographicsEvent instance.
   * @param other The existing instance to copy.
   * @return A new DemographicsEvent RecordBuilder
   */
  public static com.irisdemo.banksim.avroevent.DemographicsEvent.Builder newBuilder(com.irisdemo.banksim.avroevent.DemographicsEvent other) {
    if (other == null) {
      return new com.irisdemo.banksim.avroevent.DemographicsEvent.Builder();
    } else {
      return new com.irisdemo.banksim.avroevent.DemographicsEvent.Builder(other);
    }
  }

  /**
   * RecordBuilder for DemographicsEvent instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DemographicsEvent>
    implements org.apache.avro.data.RecordBuilder<DemographicsEvent> {

    private long id;
    private java.lang.CharSequence eventDate;
    private java.lang.CharSequence account;
    private java.lang.CharSequence name;
    private java.lang.CharSequence state;
    private java.lang.CharSequence city;
    private java.lang.CharSequence phone;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.irisdemo.banksim.avroevent.DemographicsEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.eventDate)) {
        this.eventDate = data().deepCopy(fields()[1].schema(), other.eventDate);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.account)) {
        this.account = data().deepCopy(fields()[2].schema(), other.account);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.name)) {
        this.name = data().deepCopy(fields()[3].schema(), other.name);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.state)) {
        this.state = data().deepCopy(fields()[4].schema(), other.state);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.city)) {
        this.city = data().deepCopy(fields()[5].schema(), other.city);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.phone)) {
        this.phone = data().deepCopy(fields()[6].schema(), other.phone);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
    }

    /**
     * Creates a Builder by copying an existing DemographicsEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(com.irisdemo.banksim.avroevent.DemographicsEvent other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.eventDate)) {
        this.eventDate = data().deepCopy(fields()[1].schema(), other.eventDate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.account)) {
        this.account = data().deepCopy(fields()[2].schema(), other.account);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.name)) {
        this.name = data().deepCopy(fields()[3].schema(), other.name);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.state)) {
        this.state = data().deepCopy(fields()[4].schema(), other.state);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.city)) {
        this.city = data().deepCopy(fields()[5].schema(), other.city);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.phone)) {
        this.phone = data().deepCopy(fields()[6].schema(), other.phone);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.irisdemo.banksim.avroevent.DemographicsEvent.Builder setId(long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.irisdemo.banksim.avroevent.DemographicsEvent.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventDate' field.
      * @return The value.
      */
    public java.lang.CharSequence getEventDate() {
      return eventDate;
    }


    /**
      * Sets the value of the 'eventDate' field.
      * @param value The value of 'eventDate'.
      * @return This builder.
      */
    public com.irisdemo.banksim.avroevent.DemographicsEvent.Builder setEventDate(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.eventDate = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'eventDate' field has been set.
      * @return True if the 'eventDate' field has been set, false otherwise.
      */
    public boolean hasEventDate() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'eventDate' field.
      * @return This builder.
      */
    public com.irisdemo.banksim.avroevent.DemographicsEvent.Builder clearEventDate() {
      eventDate = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'account' field.
      * @return The value.
      */
    public java.lang.CharSequence getAccount() {
      return account;
    }


    /**
      * Sets the value of the 'account' field.
      * @param value The value of 'account'.
      * @return This builder.
      */
    public com.irisdemo.banksim.avroevent.DemographicsEvent.Builder setAccount(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.account = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'account' field has been set.
      * @return True if the 'account' field has been set, false otherwise.
      */
    public boolean hasAccount() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'account' field.
      * @return This builder.
      */
    public com.irisdemo.banksim.avroevent.DemographicsEvent.Builder clearAccount() {
      account = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.irisdemo.banksim.avroevent.DemographicsEvent.Builder setName(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.name = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.irisdemo.banksim.avroevent.DemographicsEvent.Builder clearName() {
      name = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'state' field.
      * @return The value.
      */
    public java.lang.CharSequence getState() {
      return state;
    }


    /**
      * Sets the value of the 'state' field.
      * @param value The value of 'state'.
      * @return This builder.
      */
    public com.irisdemo.banksim.avroevent.DemographicsEvent.Builder setState(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.state = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'state' field has been set.
      * @return True if the 'state' field has been set, false otherwise.
      */
    public boolean hasState() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'state' field.
      * @return This builder.
      */
    public com.irisdemo.banksim.avroevent.DemographicsEvent.Builder clearState() {
      state = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'city' field.
      * @return The value.
      */
    public java.lang.CharSequence getCity() {
      return city;
    }


    /**
      * Sets the value of the 'city' field.
      * @param value The value of 'city'.
      * @return This builder.
      */
    public com.irisdemo.banksim.avroevent.DemographicsEvent.Builder setCity(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.city = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'city' field has been set.
      * @return True if the 'city' field has been set, false otherwise.
      */
    public boolean hasCity() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'city' field.
      * @return This builder.
      */
    public com.irisdemo.banksim.avroevent.DemographicsEvent.Builder clearCity() {
      city = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'phone' field.
      * @return The value.
      */
    public java.lang.CharSequence getPhone() {
      return phone;
    }


    /**
      * Sets the value of the 'phone' field.
      * @param value The value of 'phone'.
      * @return This builder.
      */
    public com.irisdemo.banksim.avroevent.DemographicsEvent.Builder setPhone(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.phone = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'phone' field has been set.
      * @return True if the 'phone' field has been set, false otherwise.
      */
    public boolean hasPhone() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'phone' field.
      * @return This builder.
      */
    public com.irisdemo.banksim.avroevent.DemographicsEvent.Builder clearPhone() {
      phone = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public DemographicsEvent build() {
      try {
        DemographicsEvent record = new DemographicsEvent();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.eventDate = fieldSetFlags()[1] ? this.eventDate : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.account = fieldSetFlags()[2] ? this.account : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.name = fieldSetFlags()[3] ? this.name : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.state = fieldSetFlags()[4] ? this.state : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.city = fieldSetFlags()[5] ? this.city : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.phone = fieldSetFlags()[6] ? this.phone : (java.lang.CharSequence) defaultValue(fields()[6]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<DemographicsEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<DemographicsEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<DemographicsEvent>
    READER$ = (org.apache.avro.io.DatumReader<DemographicsEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeLong(this.id);

    out.writeString(this.eventDate);

    out.writeString(this.account);

    out.writeString(this.name);

    out.writeString(this.state);

    out.writeString(this.city);

    out.writeString(this.phone);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.id = in.readLong();

      this.eventDate = in.readString(this.eventDate instanceof Utf8 ? (Utf8)this.eventDate : null);

      this.account = in.readString(this.account instanceof Utf8 ? (Utf8)this.account : null);

      this.name = in.readString(this.name instanceof Utf8 ? (Utf8)this.name : null);

      this.state = in.readString(this.state instanceof Utf8 ? (Utf8)this.state : null);

      this.city = in.readString(this.city instanceof Utf8 ? (Utf8)this.city : null);

      this.phone = in.readString(this.phone instanceof Utf8 ? (Utf8)this.phone : null);

    } else {
      for (int i = 0; i < 7; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.id = in.readLong();
          break;

        case 1:
          this.eventDate = in.readString(this.eventDate instanceof Utf8 ? (Utf8)this.eventDate : null);
          break;

        case 2:
          this.account = in.readString(this.account instanceof Utf8 ? (Utf8)this.account : null);
          break;

        case 3:
          this.name = in.readString(this.name instanceof Utf8 ? (Utf8)this.name : null);
          break;

        case 4:
          this.state = in.readString(this.state instanceof Utf8 ? (Utf8)this.state : null);
          break;

        case 5:
          this.city = in.readString(this.city instanceof Utf8 ? (Utf8)this.city : null);
          break;

        case 6:
          this.phone = in.readString(this.phone instanceof Utf8 ? (Utf8)this.phone : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










